;
window.CloudflareApps = window.CloudflareApps || {};
CloudflareApps.siteId = "0fcf038e37fea267808957f53b8cded1";
CloudflareApps.installs = CloudflareApps.installs || {};;
(function() {
    'use strict'
    CloudflareApps.internal = CloudflareApps.internal || {}
    var errors = []
    CloudflareApps.internal.placementErrors = errors
    var errorHashes = {}

    function noteError(options) {
        var hash = options.selector + '::' + options.type + '::' + (options.installId || '')
        if (errorHashes[hash]) {
            return
        }
        errorHashes[hash] = true
        errors.push(options)
    }
    var initializedSelectors = {}
    var currentInit = false
    CloudflareApps.internal.markSelectors = function markSelectors() {
        if (!currentInit) {
            check()
            currentInit = true
            setTimeout(function() {
                currentInit = false
            })
        }
    }

    function check() {
        var installs = window.CloudflareApps.installs
        for (var installId in installs) {
            if (!installs.hasOwnProperty(installId)) {
                continue
            }
            var selectors = installs[installId].selectors
            if (!selectors) {
                continue
            }
            for (var key in selectors) {
                if (!selectors.hasOwnProperty(key)) {
                    continue
                }
                var hash = installId + '::' + key
                if (initializedSelectors[hash]) {
                    continue
                }
                var els = document.querySelectorAll(selectors[key])
                if (els && els.length > 1) {
                    noteError({
                        type: 'init:too-many',
                        option: key,
                        selector: selectors[key],
                        installId: installId
                    })
                    initializedSelectors[hash] = true
                    continue
                } else if (!els || !els.length) {
                    continue
                }
                initializedSelectors[hash] = true
                els[0].setAttribute('cfapps-selector', selectors[key])
            }
        }
    }
    CloudflareApps.querySelector = function querySelector(selector) {
        if (selector === 'body' || selector === 'head') {
            return document[selector]
        }
        CloudflareApps.internal.markSelectors()
        var els = document.querySelectorAll('[cfapps-selector="' + selector + '"]')
        if (!els || !els.length) {
            noteError({
                type: 'select:not-found:by-attribute',
                selector: selector
            })
            els = document.querySelectorAll(selector)
            if (!els || !els.length) {
                noteError({
                    type: 'select:not-found:by-query',
                    selector: selector
                })
                return null
            } else if (els.length > 1) {
                noteError({
                    type: 'select:too-many:by-query',
                    selector: selector
                })
            }
            return els[0]
        }
        if (els.length > 1) {
            noteError({
                type: 'select:too-many:by-attribute',
                selector: selector
            })
        }
        return els[0]
    }
}());
(function() {
    'use strict'
    var prevEls = {}
    CloudflareApps.createElement = function createElement(options, prevEl) {
        options = options || {}
        CloudflareApps.internal.markSelectors()
        try {
            if (prevEl && prevEl.parentNode) {
                var replacedEl
                if (prevEl.cfAppsElementId) {
                    replacedEl = prevEls[prevEl.cfAppsElementId]
                }
                if (replacedEl) {
                    prevEl.parentNode.replaceChild(replacedEl, prevEl)
                    delete prevEls[prevEl.cfAppsElementId]
                } else {
                    prevEl.parentNode.removeChild(prevEl)
                }
            }
            var element = document.createElement('cloudflare-app')
            var container
            if (options.pages && options.pages.URLPatterns && !CloudflareApps.matchPage(options.pages.URLPatterns)) {
                return element
            }
            try {
                container = CloudflareApps.querySelector(options.selector)
            } catch (e) {}
            if (!container) {
                return element
            }
            if (!container.parentNode && (options.method === 'after' || options.method === 'before' || options.method === 'replace')) {
                return element
            }
            if (container === document.body) {
                if (options.method === 'after') {
                    options.method = 'append'
                } else if (options.method === 'before') {
                    options.method = 'prepend'
                }
            }
            switch (options.method) {
                case 'prepend':
                    if (container.firstChild) {
                        container.insertBefore(element, container.firstChild)
                        break
                    }
                case 'append':
                    container.appendChild(element)
                    break
                case 'after':
                    if (container.nextSibling) {
                        container.parentNode.insertBefore(element, container.nextSibling)
                    } else {
                        container.parentNode.appendChild(element)
                    }
                    break
                case 'before':
                    container.parentNode.insertBefore(element, container)
                    break
                case 'replace':
                    try {
                        var id = element.cfAppsElementId = Math.random().toString(36)
                        prevEls[id] = container
                    } catch (e) {}
                    container.parentNode.replaceChild(element, container)
            }
            return element
        } catch (e) {
            if (typeof console !== 'undefined' && typeof console.error !== 'undefined') {
                console.error('Error creating Cloudflare Apps element', e)
            }
        }
    }
}());
(function() {
    'use strict'
    CloudflareApps.matchPage = function matchPage(patterns) {
        if (!patterns || !patterns.length) {
            return true
        }
        var loc = document.location.host + document.location.pathname
        if (window.CloudflareApps && CloudflareApps.proxy && CloudflareApps.proxy.originalURL) {
            var url = CloudflareApps.proxy.originalURL.parsed
            loc = url.host + url.path
        }
        for (var i = 0; i < patterns.length; i++) {
            var re = new RegExp(patterns[i], 'i')
            if (re.test(loc)) {
                return true
            }
        }
        return false
    }
}());
CloudflareApps.installs["aoAITCSeU9bi"] = {
    appId: "8-VC6gllQGPi",
    scope: {}
};;
CloudflareApps.installs["aoAITCSeU9bi"].options = {
    "backgroundColor": "#3d3d3d",
    "buttonColor": "#616161",
    "coverColor": "#000000",
    "items": [{
        "href": "",
        "itemType": "label",
        "labelText": "Menu",
        "linkText": ""
    }, {
        "href": "https://www.sobloxsy.com",
        "icon": "home",
        "itemType": "link",
        "labelText": "",
        "linkText": "Home"
    }, {
        "href": "https://sobloxsy.com/about",
        "icon": "envelop",
        "itemType": "link",
        "labelText": "",
        "linkText": "About Us"
    }, {
        "href": "https://sobloxsy.com/books/",
        "icon": "book",
        "itemType": "link",
        "labelText": "",
        "linkText": "Books"
    }, {
        "href": "https://create.sobloxsy.com/",
        "icon": "wrench",
        "itemType": "link",
        "labelText": "",
        "linkText": "Create"
    }, {
        "href": "https://socoolgames.sobloxsy.com",
        "icon": "accessibility",
        "itemType": "link",
        "labelText": "",
        "linkText": "Games",
        "targetBlank": false
    }, {
        "href": "https://testplace.sobloxsy.com",
        "icon": "warning",
        "itemType": "link",
        "labelText": "",
        "linkText": "Testplace",
        "targetBlank": false
    }, {
        "href": "https://justsearchit.sobloxsy.com",
        "icon": "star-full",
        "itemType": "link",
        "labelText": "",
        "linkText": "Just Search It",
        "targetBlank": false
    }, {
        "href": "",
        "icon": "none",
        "itemType": "label",
        "labelText": "parody",
        "linkText": "",
        "targetBlank": false
    }, {
        "href": "https://google.sobloxsy.com",
        "icon": "google",
        "itemType": "link",
        "labelText": "",
        "linkText": "Google",
        "targetBlank": false
    }, {
        "href": "https://htmledit.sobloxsy.com",
        "icon": "terminal",
        "itemType": "link",
        "labelText": "",
        "linkText": "HTML Editor",
        "targetBlank": false
    }],
    "labelColor": "#e6e6e6",
    "linkColor": "#ffffff",
    "position": "left",
    "showCover": true
};;
CloudflareApps.installs["aoAITCSeU9bi"].URLPatterns = ["^games.sobloxsy.com/?.*$", "^google.sobloxsy.com/?.*$", "^htmledit.sobloxsy.com/?.*$", "^search.sobloxsy.com/?.*$", "^testplace.sobloxsy.com/?.*$", "^webhost.sobloxsy.com/?.*$", "^www.sobloxsy.com/?.*$"];;
CloudflareApps.installs["lxOOAd1nfBrY"] = {
    appId: "Ek_0U0d0YWhZ",
    scope: {}
};;
CloudflareApps.installs["lxOOAd1nfBrY"].options = {};;
CloudflareApps.installs["lxOOAd1nfBrY"].URLPatterns = ["^htmledit.sobloxsy.com/?.*$"];;
CloudflareApps.installs["o5pKHw9e0jc3"] = {
    appId: "nt4L5NPJq1za",
    scope: {}
};;
CloudflareApps.installs["o5pKHw9e0jc3"].options = {
    "blocks": [{
        "code": "\u003chead\u003e\n\n\u003cstyle\u003e\n@font-face {\n    font-family: 'gothammedium';\n    src: url('https://files.sobloxsy.com/gothammedium-webfont.woff2') format('woff2'),\n         url('https://files.sobloxsy.com/gothammedium-webfont.woff') format('woff');\n    font-weight: normal;\n    font-style: normal;\n\n}\n\n.wjka {\n  text-align: center;\n  font-family: 'gothammedium', sans-serif;\npostion: fixed;\nbottom: 0px;\n}\n\u003c/style\u003e\n\u003c/head\u003e\n\n\u003cdiv id=\"donor\"\u003e\u003cdiv class=\"wjka\" id=\"donor-text\"\u003e\u003cdiv\u003e\u003cclass=\"wjka\"p\u003eHello, This website was made with the intent to create parody. We are NOT affiliated with any companys you may have seen on this website in any way. This is just for fun.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e",
        "location": {
            "method": "append",
            "pages": {
                "URLPatterns": ["^files.sobloxsy.com/?.*$", "^games.sobloxsy.com/?.*$", "^google.sobloxsy.com/?.*$", "^htmledit.sobloxsy.com/?.*$", "^sobloxsy.com/?.*$", "^testplace.sobloxsy.com/?.*$", "^webhost.sobloxsy.com/?.*$", "^www.sobloxsy.com/?.*$"]
            },
            "selector": "body"
        }
    }, {
        "code": "\u003cscript data-ad-client=\"ca-pub-5751343033961763\" async src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\"\u003e\u003c/script\u003e",
        "location": {
            "method": "prepend",
            "selector": "head"
        }
    }]
};;
CloudflareApps.installs["o5pKHw9e0jc3"].URLPatterns = ["^games.sobloxsy.com/?.*$", "^google.sobloxsy.com/?.*$", "^htmledit.sobloxsy.com/?.*$", "^mobile.sobloxsy.com/?.*$", "^search.sobloxsy.com/?.*$", "^testplace.sobloxsy.com/?.*$", "^webhost.sobloxsy.com/?.*$", "^www.sobloxsy.com/?.*$"];;
CloudflareApps.installs["o5pKHw9e0jc3"].selectors = {
    "blocks[0].location.selector": "body",
    "blocks[1].location.selector": "head"
};;
CloudflareApps.installs["p2QQF2eis8rF"] = {
    appId: "nGAnsTeiPCQx",
    scope: {}
};;
CloudflareApps.installs["p2QQF2eis8rF"].options = {
    "subdomain_tracker_ids": [{
        "subdomain": "",
        "tracker_id": ""
    }],
    "tracker_id": "G-ZMN4BHJKYZ"
};;
CloudflareApps.installs["p2QQF2eis8rF"].URLPatterns = ["^socoolgames.sobloxsy.com/?.*$"];;
CloudflareApps.installs["p2QQF2eis8rF"].product = {
    "id": "google-analytics-free"
};;
CloudflareApps.installs["3SF7sYv4Ccnz"] = {
    appId: "lQNVixFXFXhM",
    scope: {}
};;
CloudflareApps.installs["3SF7sYv4Ccnz"].options = {
    "buttons": [{
        "backgroundColor": "#4d97ff",
        "borderRadius": 1,
        "color": "#ffffff",
        "fontSize": "small",
        "targetBlank": false,
        "text": "Sitemap",
        "url": "https://sobloxsy.com/sitemap"
    }],
    "horizontalAlignment": "left",
    "location": {
        "method": "prepend",
        "pages": {
            "URLPatterns": ["^sobloxsy.com/?.*$"]
        },
        "selector": "body \u003e div:nth-child(2) \u003e .page \u003e div:nth-child(2) \u003e .splash \u003e .title-banner.intro-banner \u003e .flex-row.intro-subnav"
    },
    "stacked": false
};;
CloudflareApps.installs["3SF7sYv4Ccnz"].selectors = {
    "location.selector": "body \u003e div:nth-child(2) \u003e .page \u003e div:nth-child(2) \u003e .splash \u003e .title-banner.intro-banner \u003e .flex-row.intro-subnav"
};;
CloudflareApps.installs["ADUT2I3DYXO1"] = {
    appId: "qdbruf8Ud6a8",
    scope: {}
};;
CloudflareApps.installs["ADUT2I3DYXO1"].options = {
    "blocks": [{
        "content": "\u003cp style=\"text-align: center;\"\u003eThis website was made with the intent to make parody. We are \u003cstrong\u003eNOT\u003c/strong\u003e affiliated with any companys you may have seen on this website in any way. This is Just for fun.\u003c/p\u003e",
        "horizontalAlignment": "left",
        "location": {
            "method": "replace",
            "pages": {
                "URLPatterns": ["^sobloxsy.com/about/?.*$"]
            },
            "selector": "body \u003e div:nth-child(3) \u003e .page \u003e div:last-child \u003e .inner.about \u003e .masthead \u003e div:first-child"
        }
    }]
};;
CloudflareApps.installs["ADUT2I3DYXO1"].URLPatterns = ["^sobloxsy.com/about/?.*$"];;
CloudflareApps.installs["ADUT2I3DYXO1"].selectors = {
    "blocks[0].location.selector": "body \u003e div:nth-child(3) \u003e .page \u003e div:last-child \u003e .inner.about \u003e .masthead \u003e div:first-child"
};;
if (CloudflareApps.matchPage(CloudflareApps.installs['ADUT2I3DYXO1'].URLPatterns)) {
    (function() {
        'use strict'
        if (!document.addEventListener) return
        var options = CloudflareApps.installs['ADUT2I3DYXO1'].options
        var elements = {}
        var prevElements = {}

        function updateElements() {
            options.blocks.reverse().forEach(function(block, index) {
                var locationHash = [block.location.selector, block.location.method, index].join('!')
                var element
                if (elements[locationHash]) {
                    element = elements[locationHash]
                } else {
                    if (block.location.method === 'replace') {
                        prevElements[locationHash] = document.querySelector(block.location.selector)
                    }
                    element = CloudflareApps.createElement(block.location)
                    elements[locationHash] = element
                }
                element.setAttribute('app', 'add-content')
                element.foundInBlocks = true
                element.innerHTML = ''
                var contentWrapper = document.createElement('content-wrapper')
                contentWrapper.innerHTML = block.content
                element.appendChild(contentWrapper)
            })
            for (var hash in elements) {
                if (!elements[hash].foundInBlocks) {
                    if (prevElements[hash]) {
                        elements[hash].parentNode.replaceChild(prevElements[hash], elements[hash])
                        delete prevElements[hash]
                    } else {
                        elements[hash].parentNode.removeChild(elements[hash])
                    }
                    delete elements[hash]
                } else {
                    delete elements[hash].foundInBlocks
                }
            }
        }
        if (document.readyState === 'loading') {
            document.addEventListener('DOMContentLoaded', updateElements)
        } else {
            updateElements()
        }
        window.CloudflareApps.installs['ADUT2I3DYXO1'].scope = {
            setOptions: function(nextOptions) {
                options = nextOptions
                updateElements()
            }
        }
    }())
};
if (CloudflareApps.matchPage(CloudflareApps.installs['aoAITCSeU9bi'].URLPatterns)) {
    (function() {
        "use strict";
        if (!document.addEventListener) return;
        var options = CloudflareApps.installs['aoAITCSeU9bi'].options;
        var pointerEventsSupport;
        var initialized = false;
        (function() {
            var el = document.createElement("x");
            el.style.cssText = "pointer-events:auto";
            pointerEventsSupport = el.style.pointerEvents === "auto";
        })();
        var navEl = document.createElement("cfapps-side-nav");
        var buttonEl = document.createElement("cfapps-side-nav-button");

        function setPosition() {
            navEl.setAttribute("cfapps-side-nav-position", options.position);
            buttonEl.setAttribute("cfapps-side-nav-position", options.position);
        }
        setPosition();
        var coverEl = document.createElement("cfapps-side-nav-cover");
        var style;

        function addStyles() {
            style = document.createElement("style");
            renderStyles();
            document.body.appendChild(style);
        }

        function renderStyles() {
            style.innerHTML = "" + "cfapps-side-nav > a {" + "color: " +
                options.linkColor + " !important" + "}" + "cfapps-side-nav-label {" + "color: " +
                options.labelColor + " !important" + "}" + "cfapps-side-nav {" + "background: " +
                options.backgroundColor + " !important" + "}" + "cfapps-side-nav-button-bar {" + "background: " +
                options.buttonColor + " !important" + "}" + 'cfapps-side-nav-button[cfapps-side-nav-opened="true"] cfapps-side-nav-button-bar {' + "background: " +
                options.linkColor + " !important" + "}" +
                (options.showCover ? "" + "cfapps-side-nav-cover {" + "background: " +
                    options.coverColor + " !important" + "}" : "") + "";
        }

        function addCover() {
            if (pointerEventsSupport) {
                document.body.appendChild(coverEl);
            }
        }

        function addNavItem(item) {
            var itemEl;
            if (item.itemType === "link") {
                itemEl = document.createElement("a");
                itemEl.appendChild(document.createTextNode(item.linkText));
                itemEl.setAttribute("href", item.href || "");
                if (item.targetBlank === true) {
                    itemEl.setAttribute("target", "_blank");
                }
                if (item.icon && item.icon !== "none") {
                    itemEl.setAttribute("cfapps-side-nav-icon", item.icon);
                }
            } else {
                itemEl = document.createElement("cfapps-side-nav-label");
                itemEl.appendChild(document.createTextNode(item.labelText));
            }
            navEl.appendChild(itemEl);
        }

        function addNavEl() {
            document.body.appendChild(navEl);
        }

        function addNavItems() {
            options.items.forEach(addNavItem);
        }

        function addButton() {
            buttonEl.innerHTML = "" + "<cfapps-side-nav-button-bar></cfapps-side-nav-button-bar>" + "<cfapps-side-nav-button-bar></cfapps-side-nav-button-bar>" + "<cfapps-side-nav-button-bar></cfapps-side-nav-button-bar>" + "";
            document.body.appendChild(buttonEl);
        }

        function setupEvents() {
            buttonEl.addEventListener("click", toggle);
            document.body.addEventListener("click", function(event) {
                if (!event || !event.target) return;
                if (event.target === buttonEl) return;
                if (event.target === navEl) return;
                if (buttonEl.contains(event.target)) return;
                if (navEl.contains(event.target)) return;
                close();
            });
            window.addEventListener("pushState", close);
            window.addEventListener("replaceState", close);
            window.addEventListener("hashchange", close);
            coverEl.addEventListener("touchstart", function() {}, false);
            buttonEl.addEventListener("touchstart", function() {}, false);
            navEl.addEventListener("touchstart", function() {}, false);
        }

        function toggle() {
            if (buttonEl.getAttribute("cfapps-side-nav-opened") === "true") {
                close();
            } else {
                open();
            }
        }

        function open() {
            coverEl.setAttribute("cfapps-side-nav-opened", "true");
            buttonEl.setAttribute("cfapps-side-nav-opened", "true");
            navEl.setAttribute("cfapps-side-nav-opened", "true");
        }

        function close() {
            coverEl.setAttribute("cfapps-side-nav-opened", "false");
            buttonEl.setAttribute("cfapps-side-nav-opened", "false");
            navEl.setAttribute("cfapps-side-nav-opened", "false");
        }
        document.addEventListener("DOMContentLoaded", function() {
            if (!initialized) {
                addStyles();
                addCover();
                addNavEl();
                addNavItems();
                addButton();
                setupEvents();
                initialized = true;
            }
        });
        window.CloudflareApps.installs['aoAITCSeU9bi'].scope = {
            setOptions: function setOptions(nextOptions) {
                options = nextOptions;
                renderStyles();
                navEl.innerHTML = "";
                addNavItems();
                setPosition();
            }
        };
    })();
};
if (CloudflareApps.matchPage(CloudflareApps.installs['lxOOAd1nfBrY'].URLPatterns)) {
    (function(modules) {
        var installedModules = {};

        function __webpack_require__(moduleId) {
            if (installedModules[moduleId])
                return installedModules[moduleId].exports;
            var module = installedModules[moduleId] = {
                exports: {},
                id: moduleId,
                loaded: false
            };
            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
            module.loaded = true;
            return module.exports;
        }
        __webpack_require__.m = modules;
        __webpack_require__.c = installedModules;
        __webpack_require__.p = "";
        return __webpack_require__(0);
    })
    ([function(module, exports, __webpack_require__) {
        module.exports = __webpack_require__(1);
    }, function(module, exports, __webpack_require__) {
        var cssPath = __webpack_require__(2);
        var asConstants = __webpack_require__(3);
        var storageAvailable = __webpack_require__(4);
        var lStorage = __webpack_require__(5);
        var getLocationParam = function() {
            return window.location.pathname;
        }
        var shouldBackup = function(formElement) {
            if (asConstants.excludedTypes.indexOf(formElement.type) !== -1) {
                return false;
            }
            for (var i = 0; i < asConstants.regExps.length; i++) {
                if (asConstants.regExps[i].test(formElement.name)) {
                    return false;
                }
            }
            return true;
        }
        var formBackedUp = [];
        var FormBackup = function(formElement) {
            this.backupObject = {};
            this.formElement = formElement;
            this.formPath = cssPath(formElement);
            formBackedUp.push(this.formPath);
        };
        FormBackup.prototype.setElemValue = function(elem, value) {
            if (!elem.name) {
                return false;
            }
            this.backupObject[elem.name] = value;
            this.save();
        };
        FormBackup.prototype.save = function() {
            lStorage.setJSON(getLocationParam() + this.formPath, this.backupObject);
        }
        FormBackup.prototype.restore = function() {
            var formParams = lStorage.getJSON(getLocationParam() + this.formPath);
            this.backupObject = formParams;
            for (var fieldName in formParams) {
                var formValue = formParams[fieldName];
                var elem = document.getElementsByName(fieldName)[0];
                if (!elem.value) {
                    elem.value = formParams[fieldName];
                }
            }
        }
        FormBackup.prototype.attachSubmitListener = function() {
            var me = this;
            this.formElement.addEventListener("submit", function(e) {
                lStorage.clear(getLocationParam() + me.formPath);
            })
        }
        FormBackup.prototype.attachInputListeners = function() {
            var formFields = document.querySelectorAll(this.formPath + ' input,textarea');
            var formFieldsArr = [].slice.call(formFields);
            var me = this;
            formFieldsArr.forEach(function(field) {
                if (!shouldBackup(field)) {
                    return;
                }
                field.addEventListener("input", function(e) {
                    me.setElemValue(this, e.target.value);
                });
            });
        }
        var bootstrap = function() {
            if (!storageAvailable("localStorage")) {
                return false;
            }
            var timerLength = 100;
            var setFormBackup = function() {
                setTimeout(function() {
                    for (var i = 0; i < document.forms.length; i++) {
                        if (formBackedUp.indexOf(cssPath(document.forms[i])) !== -1) {
                            return false;
                        };
                        var formBackup = new FormBackup(document.forms[i]);
                        formBackup.restore();
                        formBackup.attachSubmitListener();
                        formBackup.attachInputListeners();
                    };
                    timerLength *= 2;
                    setFormBackup();
                }, timerLength);
            }
            setFormBackup();
        };
        document.addEventListener("DOMContentLoaded", function(event) {
            bootstrap();
        });
        if (document.readyState === "complete") {
            bootstrap();
        }
    }, function(module, exports) {
        var UTILS = {};
        UTILS.cssPath = function(node, optimized) {
            if (node.nodeType !== Node.ELEMENT_NODE)
                return "";
            var steps = [];
            var contextNode = node;
            while (contextNode) {
                var step = UTILS._cssPathStep(contextNode, !!optimized, contextNode === node);
                if (!step)
                    break;
                steps.push(step);
                if (step.optimized)
                    break;
                contextNode = contextNode.parentNode;
            }
            steps.reverse();
            return steps.join(" > ");
        }
        UTILS._cssPathStep = function(node, optimized, isTargetNode) {
            if (node.nodeType !== Node.ELEMENT_NODE)
                return null;
            var id = node.getAttribute("id");
            if (optimized) {
                if (id)
                    return new UTILS.DOMNodePathStep(idSelector(id), true);
                var nodeNameLower = node.nodeName.toLowerCase();
                if (nodeNameLower === "body" || nodeNameLower === "head" || nodeNameLower === "html")
                    return new UTILS.DOMNodePathStep(node.nodeName.toLowerCase(), true);
            }
            var nodeName = node.nodeName.toLowerCase();
            if (id)
                return new UTILS.DOMNodePathStep(nodeName.toLowerCase() + idSelector(id), true);
            var parent = node.parentNode;
            if (!parent || parent.nodeType === Node.DOCUMENT_NODE)
                return new UTILS.DOMNodePathStep(nodeName.toLowerCase(), true);

            function prefixedElementClassNames(node) {
                var classAttribute = node.getAttribute("class");
                if (!classAttribute)
                    return [];
                return classAttribute.split(/\s+/g).filter(Boolean).map(function(name) {
                    return "$" + name;
                });
            }

            function idSelector(id) {
                return "#" + escapeIdentifierIfNeeded(id);
            }

            function escapeIdentifierIfNeeded(ident) {
                if (isCSSIdentifier(ident))
                    return ident;
                var shouldEscapeFirst = /^(?:[0-9]|-[0-9-]?)/.test(ident);
                var lastIndex = ident.length - 1;
                return ident.replace(/./g, function(c, i) {
                    return ((shouldEscapeFirst && i === 0) || !isCSSIdentChar(c)) ? escapeAsciiChar(c, i === lastIndex) : c;
                });
            }

            function escapeAsciiChar(c, isLast) {
                return "\\" + toHexByte(c) + (isLast ? "" : " ");
            }

            function toHexByte(c) {
                var hexByte = c.charCodeAt(0).toString(16);
                if (hexByte.length === 1)
                    hexByte = "0" + hexByte;
                return hexByte;
            }

            function isCSSIdentChar(c) {
                if (/[a-zA-Z0-9_-]/.test(c))
                    return true;
                return c.charCodeAt(0) >= 0xA0;
            }

            function isCSSIdentifier(value) {
                return /^-?[a-zA-Z_][a-zA-Z0-9_-]*$/.test(value);
            }
            var prefixedOwnClassNamesArray = prefixedElementClassNames(node);
            var needsClassNames = false;
            var needsNthChild = false;
            var ownIndex = -1;
            var siblings = parent.children;
            for (var i = 0;
                (ownIndex === -1 || !needsNthChild) && i < siblings.length; ++i) {
                var sibling = siblings[i];
                if (sibling === node) {
                    ownIndex = i;
                    continue;
                }
                if (needsNthChild)
                    continue;
                if (sibling.nodeName.toLowerCase() !== nodeName.toLowerCase())
                    continue;
                needsClassNames = true;
                var ownClassNames = prefixedOwnClassNamesArray;
                var ownClassNameCount = 0;
                for (var name in ownClassNames)
                    ++ownClassNameCount;
                if (ownClassNameCount === 0) {
                    needsNthChild = true;
                    continue;
                }
                var siblingClassNamesArray = prefixedElementClassNames(sibling);
                for (var j = 0; j < siblingClassNamesArray.length; ++j) {
                    var siblingClass = siblingClassNamesArray[j];
                    if (ownClassNames.indexOf(siblingClass))
                        continue;
                    delete ownClassNames[siblingClass];
                    if (!--ownClassNameCount) {
                        needsNthChild = true;
                        break;
                    }
                }
            }
            var result = nodeName.toLowerCase();
            if (isTargetNode && nodeName.toLowerCase() === "input" && node.getAttribute("type") && !node.getAttribute("id") && !node.getAttribute("class"))
                result += "[type=\"" + node.getAttribute("type") + "\"]";
            if (needsNthChild) {
                result += ":nth-child(" + (ownIndex + 1) + ")";
            } else if (needsClassNames) {
                for (var prefixedName in prefixedOwnClassNamesArray)
                    result += "." + escapeIdentifierIfNeeded(prefixedOwnClassNamesArray[prefixedName].substr(1));
            }
            return new UTILS.DOMNodePathStep(result, false);
        }
        UTILS.DOMNodePathStep = function(value, optimized) {
            this.value = value;
            this.optimized = optimized || false;
        }
        UTILS.DOMNodePathStep.prototype = {
            toString: function() {
                return this.value;
            }
        }
        module.exports = UTILS.cssPath;
    }, function(module, exports) {
        var CC_NUM = /^((card|cc|acct).?(number|#|no|num)|nummer|credito|numero|número|numéro|カード番号|Номер.*карты|信用卡号|信用卡号码|信用卡卡號|카드)$/;
        var CC_CVV = /^(verification|card identification|security code|card code|cvn|cvv|cvc|csc|cvd|cid|ccv)$/;
        var CC_MON = /^(expir|exp.*mo|exp.*date|ccmonth|cardmonth|gueltig|gültig|monat|fecha|date.*exp|scadenza|有効期限|validade|Срок действия карты|月)$/;
        var CC_YEAR = /^(exp.?year|ablaufdatum|gueltig|gültig|yahr|fecha|scadenza|有効期限|validade|Срок действия карты|年|有效期)$/;
        var regExps = [CC_NUM, CC_CVV, CC_MON, CC_YEAR];
        var excludedTypes = ["hidden", "password", "file", "submit", "reset", "button", "checkbox", "radio"];
        module.exports = {
            regExps,
            excludedTypes
        }
    }, function(module, exports) {
        module.exports = function storageAvailable(type) {
            try {
                var storage = window[type],
                    x = '__storage_test__';
                storage.setItem(x, x);
                storage.removeItem(x);
                return true;
            } catch (e) {
                return false;
            }
        }
    }, function(module, exports) {
        var lStorage = {
            getJSON: function(key, placeholder) {
                var value = localStorage.getItem(key);
                if (value) {
                    try {
                        return JSON.parse(value);
                    } catch (e) {}
                }
                return placeholder || {};
            },
            setJSON: function(key, value) {
                localStorage.setItem(key, JSON.stringify(value))
            },
            clear: function(key) {
                localStorage.removeItem(key);
            }
        }
        module.exports = lStorage;
    }]);
};
if (CloudflareApps.matchPage(CloudflareApps.installs['o5pKHw9e0jc3'].URLPatterns)) {
    (function() {
        'use strict'
        if (!document.addEventListener) return
        var options = CloudflareApps.installs['o5pKHw9e0jc3'].options
        var elements = {}
        var prevElements = {}
        var initialized = false;

        function updateElements() {
            options.blocks.forEach(function(block, index) {
                var locationHash = [block.location.selector, block.location.method, index].join('!')
                var element
                if (elements[locationHash]) {
                    element = elements[locationHash]
                } else {
                    if (block.location.method === 'replace') {
                        prevElements[locationHash] = document.querySelector(block.location.selector)
                    }
                    element = CloudflareApps.createElement(block.location)
                    elements[locationHash] = element
                }
                element.foundInBlocks = true
                element.innerHTML = block.code
                var scripts = Array.prototype.slice.call(element.querySelectorAll('script'))
                if (scripts) {
                    scripts.forEach(function(script) {
                        var newScript = document.createElement('script')
                        for (var key = script.attributes.length; key--;) {
                            var attr = script.attributes[key]
                            if (attr.specified) {
                                newScript.setAttribute(attr.name, attr.value)
                            }
                        }
                        newScript.innerHTML = script.innerHTML
                        element.replaceChild(newScript, script)
                    })
                }
            })
            for (var hash in elements) {
                if (!elements[hash].foundInBlocks) {
                    if (prevElements[hash]) {
                        elements[hash].parentNode.replaceChild(prevElements[hash], elements[hash])
                        delete prevElements[hash]
                    } else {
                        elements[hash].parentNode.removeChild(elements[hash])
                    }
                    delete elements[hash]
                } else {
                    delete elements[hash].foundInBlocks
                }
            }
        }
        if (document.readyState === 'loading') {
            document.addEventListener('DOMContentLoaded', function() {
                if (initialized == false) {
                    initialized = true;
                    updateElements();
                }
            })
        } else {
            updateElements()
        }
        window.CloudflareApps.installs['o5pKHw9e0jc3'].scope = {
            setOptions: function(nextOptions) {
                options = nextOptions
                updateElements()
            }
        }
    }())
};
(function() {
    try {
        var link = document.createElement('link');
        link.rel = 'stylesheet';
        link.href = 'data:text/css;charset=utf-8;base64,';
        document.getElementsByTagName('head')[0].appendChild(link);
    } catch (e) {}
})();
(function() {
    var script = document.createElement('script');
    script.src = '/cdn-cgi/apps/body/YFfhKvPhdc_4qqyf5i2eH73MIY0.js';
    document.head.appendChild(script);
})();